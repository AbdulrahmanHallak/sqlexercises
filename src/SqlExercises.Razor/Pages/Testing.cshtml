@page
@model SqlExercises.Razor.Pages.TestingModel
@{
    ViewData["Title"] = "Test SQL";
}
<div class="container mt-4">
    <h2>Test SQL</h2>
    <button class="btn btn-link p-0 mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#erdCollapse"
        aria-expanded="false" aria-controls="erdCollapse">
        Show/Hide ERD
    </button>
    <div class="d-flex align-items-start tight-row">
        <div style="flex: 1 1 0; min-width: 0;">
            <div class="mb-2">
                <label for="sqlInput" class="form-label" style="display: block;">Enter SQL Query:</label>
                <textarea id="sqlInput" class="sql-input"></textarea>
            </div>
            <button id="runQueryBtn" class="btn btn-primary">Run</button>
        </div>
        <div style="margin-left: 25px;">
            <div class="collapse" id="erdCollapse" style="overflow: hidden; max-width: 800px;">
                <img id="erdImage" src="/images/wrattel.png" alt="ERD" class="img-fluid border zoom-image"
                    style="max-width: 800px; height: auto; object-fit: cover; cursor: zoom-in; transition: transform 0.2s ease;" />
            </div>
        </div>
    </div>
    <div class="mt-4">
        <h5>Results:</h5>
        <div id="resultsBox" class="bg-light border p-2"
            style="min-height: 100px; max-height: 300px; overflow-y: auto; overflow-x: auto;"></div>
    </div>
</div>

<script>
    // Use the reusable zoom function from site.js
    window.addEventListener('DOMContentLoaded', function () {
        const img = document.getElementById('erdImage');
        if (img) {
            const container = img.parentElement;
            if (container) {
                enableImageZoom(img, container);
            }
        }
    });
</script>

@section Scripts {
    <script>
        document.getElementById('runQueryBtn').addEventListener('click', async function () {
            const sql = document.getElementById('sqlInput').value.trim();
            const resultsBox = document.getElementById('resultsBox');
            resultsBox.innerHTML = '<em>Loading...</em>';
            try {
                const formData = new FormData();
                formData.append('Sql', sql);
                const response = await fetch('@Url.Page("/Testing")', {
                    method: 'POST',
                    body: formData
                });
                const data = await response.json();
                if (data.error) {
                    resultsBox.innerHTML = `<span class='text-danger'>${data.error}</span>`;
                } else {
                    resultsBox.innerHTML = renderTable(data.results);
                }
            } catch (err) {
                resultsBox.innerHTML = `<span class='text-danger'>${err}</span>`;
            }
        });

        function renderTable(data) {
            if (!Array.isArray(data) || data.length === 0) return '<em>No results.</em>';
            let cols = Object.keys(data[0]);
            let thead = '<thead><tr>' + cols.map(c => `<th>${c}</th>`).join('') + '</tr></thead>';
            let tbody = '<tbody>' + data.map(row => '<tr>' + cols.map(c => `<td>${row[c]}</td>`).join('') + '</tr>').join('') + '</tbody>';
            return `<table class="table table-bordered table-sm mb-0">${thead}${tbody}</table>`;
        }
    </script>
}
